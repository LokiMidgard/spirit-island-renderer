export const spiritScript = `-- Spirit Tile for Bone White's Spirit Island Mod v2 --\\r\\nuseProgression = false\\r\\nprogressionCard = nil\\r\\nuseAspect = 2\\r\\n\\r\\nfunction onLoad()\\r\\n    Color.Add(\\"SoftBlue\\", Color.new(0.45,0.6,0.7))\\r\\n    if Global.getVar(\\"gameStarted\\") then return end\\r\\n    self.createButton({\\r\\n        click_function = \\"SetupSpirit\\",\\r\\n        function_owner = self,\\r\\n        label          = \\"Choose Spirit\\",\\r\\n        position       = Vector(0.7, -0.1, 0.9),\\r\\n        rotation       = Vector(0,0,180),\\r\\n        scale = Vector(0.2,0.2,0.2),\\r\\n        width          = 1800,\\r\\n        height         = 500,\\r\\n        font_size      = 300,\\r\\n    })\\r\\n    self.createButton({\\r\\n        click_function = \\"ToggleProgression\\",\\r\\n        function_owner = self,\\r\\n        label          = \\"\\",\\r\\n        position       = Vector(-0.7, -0.1, 0.9),\\r\\n        rotation       = Vector(0,0,180),\\r\\n        scale = Vector(0.2,0.2,0.2),\\r\\n        width          = 0,\\r\\n        height         = 0,\\r\\n        font_size      = 300,\\r\\n        tooltip        = \\"Enable/Disable Progression Deck\\",\\r\\n    })\\r\\n    self.createButton({\\r\\n        click_function = \\"ToggleAspect\\",\\r\\n        function_owner = self,\\r\\n        label          = \\"\\",\\r\\n        position       = Vector(0.7, -0.2, 0.4),\\r\\n        rotation       = Vector(0,0,180),\\r\\n        scale = Vector(0.2,0.2,0.2),\\r\\n        width          = 0,\\r\\n        height         = 0,\\r\\n        font_size      = 300,\\r\\n        tooltip        = \\"Enable/Disable Aspect Deck\\",\\r\\n    })\\r\\n    local castObjects = upCast(self,1,0.5)\\r\\n    for _,obj in pairs (castObjects) do\\r\\n        if string.find(obj.getName(),\\"Progression\\") then\\r\\n            progressionCard = obj\\r\\n            self.editButton({\\r\\n                index          = 1,\\r\\n                label          = \\"No Progression\\",\\r\\n                width          = 2000,\\r\\n                height         = 500,\\r\\n            })\\r\\n        elseif string.find(obj.getName(),\\"Aspects\\") then\\r\\n            self.editButton({\\r\\n                index          = 2,\\r\\n                label          = \\"Include Aspects\\",\\r\\n                width          = 2000,\\r\\n                height         = 500,\\r\\n            })\\r\\n        end\\r\\n    end\\r\\n    Global.call(\\"addSpirit\\", {spirit=self})\\r\\nend\\r\\nfunction onObjectDestroy(obj)\\r\\n    if obj == self then Global.call(\\"removeSpirit\\", {spirit=self.guid}) end\\r\\nend\\r\\n\\r\\nfunction PickSpirit(params)\\r\\n    if params.random.aspect then\\r\\n        useAspect = 1\\r\\n    end\\r\\n    SetupSpirit(nil, params.color)\\r\\nend\\r\\nfunction SetupSpirit(object_pick,player_color)\\r\\n    local xPadding = 1.3\\r\\n    local xOffset = 1\\r\\n    local PlayerBag = getObjectFromGUID(Global.getTable(\\"PlayerBags\\")[player_color])\\r\\n    if #PlayerBag.getObjects() ~= 0 then\\r\\n        Global.call(\\"removeSpirit\\", {spirit=self.guid, color=player_color})\\r\\n        local castObjects = upCast(self,1,0.5)\\r\\n        local hpos = Player[player_color].getHandTransform().position\\r\\n        self.setPosition(Vector(hpos.x,0,hpos.z) + Vector(0,1.05,11.8))\\r\\n        self.setRotation(Vector(0,180,0))\\r\\n        self.setLock(true)\\r\\n        self.clearButtons()\\r\\n        local spos = self.getPosition()\\r\\n        local snaps = self.getSnapPoints()\\r\\n        local placed = 0\\r\\n\\r\\n        -- Setup Presence\\r\\n        for i = 1,13 do\\r\\n            local p = snaps[i]\\r\\n            if i <= #snaps then\\r\\n                PlayerBag.takeObject({position = self.positionToWorld(p.position)})\\r\\n            else\\r\\n                PlayerBag.takeObject({position = Vector(spos.x,0,spos.z) + Vector(-placed*xPadding+xOffset,1.1,10)})\\r\\n                placed = placed + 1\\r\\n            end\\r\\n        end\\r\\n\\r\\n        -- Setup Aid Tokens\\r\\n        PlayerBag.takeObject({position = Vector(spos.x,0,spos.z) + Vector(-10.2, 1.3, -4)})\\r\\n        PlayerBag.takeObject({position = Vector(spos.x,0,spos.z) + Vector(-10.2, 1.3, -2)})\\r\\n        PlayerBag.takeObject({position = Vector(spos.x,0,spos.z) + Vector(-10.2, 1.3, 0)})\\r\\n        PlayerBag.takeObject({position = Vector(spos.x,0,spos.z) + Vector(-9.2, 1.1, -5)})\\r\\n        PlayerBag.takeObject({position = Vector(spos.x,0,spos.z) + Vector(-9.2, 1.1, -3)})\\r\\n        PlayerBag.takeObject({position = Vector(spos.x,0,spos.z) + Vector(-9.2, 1.1, -1)})\\r\\n\\r\\n        -- Setup Energy Counter\\r\\n        local counter = getObjectFromGUID(Global.getVar(\\"counterBag\\")).takeObject({\\r\\n            position       = Vector(spos.x,0,spos.z) + Vector(-5,1,5)\\r\\n        })\\r\\n        counter.setLock(true)\\r\\n\\r\\n        -- Setup Progression Deck if enabled\\r\\n        if useProgression then\\r\\n            local minorPowerDeck = getObjectFromGUID(Global.getVar(\\"minorPowerZone\\")).getObjects()[1]\\r\\n            local majorPowerDeck = getObjectFromGUID(Global.getVar(\\"majorPowerZone\\")).getObjects()[1]\\r\\n            local progressionDeck = progressionCard.getVar(\\"progressionDeck\\")\\r\\n            for i,card in pairs(progressionDeck) do\\r\\n                if card[2] then\\r\\n                    majorPowerDeck.takeObject({\\r\\n                        position = Vector(spos.x,i,spos.z) + Vector(0,1.1,14),\\r\\n                        rotation = Vector(0,180,180),\\r\\n                        guid = card[1],\\r\\n                    })\\r\\n                else\\r\\n                    minorPowerDeck.takeObject({\\r\\n                        position = Vector(spos.x,i,spos.z) + Vector(0,1.1,14),\\r\\n                        rotation = Vector(0,180,180),\\r\\n                        guid = card[1],\\r\\n                    })\\r\\n                end\\r\\n            end\\r\\n        end\\r\\n\\r\\n        -- Setup objects on top of board\\r\\n        for i,obj in pairs (castObjects) do\\r\\n            obj.setLock(false)\\r\\n            if obj.tag == \\"Deck\\" then\\r\\n                if string.find(obj.getName(),\\"Aspects\\") then\\r\\n                    HandleAspect(obj, player_color)\\r\\n                else\\r\\n                    obj.deal(#obj.getObjects(),player_color)\\r\\n                end\\r\\n            elseif obj.tag == \\"Card\\" and string.find(obj.getName(),\\"Progression\\") then\\r\\n                if useProgression then\\r\\n                    obj.setPositionSmooth(Vector(spos.x,8,spos.z) + Vector(0,1.1,14))\\r\\n                else\\r\\n                    obj.destruct()\\r\\n                end\\r\\n            else\\r\\n                obj.setPositionSmooth(Vector(spos.x,0,spos.z) + Vector(-placed*xPadding+xOffset,1.1,10))\\r\\n                placed = placed + 1\\r\\n            end\\r\\n        end\\r\\n    else\\r\\n        broadcastToColor(\\"You already picked a spirit\\", player_color, \\"Red\\")\\r\\n    end\\r\\nend\\r\\nfunction HandleAspect(deck, player_color)\\r\\n    if useAspect == 0 then\\r\\n        deck.destruct()\\r\\n    elseif useAspect == 1 then\\r\\n        local index = math.random(0,#deck.getObjects())\\r\\n        if index == 0 then\\r\\n            broadcastToColor(\\"Your random Aspect is no Aspect\\", player_color, Color.SoftBlue)\\r\\n            deck.destruct()\\r\\n        else\\r\\n            deck.takeObject({\\r\\n                index = index - 1,\\r\\n                position = deck.getPosition() + Vector(0,2,0),\\r\\n                callback_function = function(obj) obj.deal(1, player_color) deck.destruct() broadcastToColor(\\"Your random Aspect is \\"..obj.getName(), player_color, Color.SoftBlue) end,\\r\\n            })\\r\\n            if deck.remainder then deck = deck.remainder end\\r\\n        end\\r\\n    else\\r\\n        deck.deal(#deck.getObjects(), player_color)\\r\\n    end\\r\\nend\\r\\n\\r\\nfunction ToggleProgression()\\r\\n    useProgression = not useProgression\\r\\n    if useProgression then\\r\\n        self.editButton({\\r\\n            index          = 1,\\r\\n            label          = \\"Progression\\",\\r\\n        })\\r\\n    else\\r\\n        self.editButton({\\r\\n            index          = 1,\\r\\n            label          = \\"No Progression\\",\\r\\n        })\\r\\n    end\\r\\nend\\r\\nfunction ToggleAspect(_, _, alt_click)\\r\\n    if alt_click then\\r\\n        useAspect = (useAspect - 1) % 3\\r\\n    else\\r\\n        useAspect = (useAspect + 1) % 3\\r\\n    end\\r\\n    if useAspect == 0 then\\r\\n        self.editButton({\\r\\n            index          = 2,\\r\\n            label          = \\"No Aspects\\",\\r\\n        })\\r\\n    elseif useAspect == 1 then\\r\\n        self.editButton({\\r\\n            index          = 2,\\r\\n            label          = \\"Random Aspect\\",\\r\\n        })\\r\\n    else\\r\\n        self.editButton({\\r\\n            index          = 2,\\r\\n            label          = \\"Include Aspects\\",\\r\\n        })\\r\\n    end\\r\\nend\\r\\n-----\\r\\nfunction upCast(obj,dist,offset,multi)\\r\\n    local dist = dist or 1\\r\\n    local offset = offset or 0\\r\\n    local multi = multi or 1\\r\\n    local oPos = obj.getPosition()\\r\\n    local oBounds = obj.getBoundsNormalized()\\r\\n    local oRot = obj.getRotation()\\r\\n    local orig = Vector(oPos[1],oPos[2]+offset,oPos[3])\\r\\n    local siz = Vector(oBounds.size.x*multi,dist,oBounds.size.z*multi)\\r\\n    local orient = Vector(oRot[1],oRot[2],oRot[3])\\r\\n    local hits = Physics.cast({\\r\\n        origin       = orig,\\r\\n        direction    = Vector(0,1,0),\\r\\n        type         = 3,\\r\\n        size         = siz,\\r\\n        orientation  = orient,\\r\\n        max_distance = 0,\\r\\n        --debug        = true,\\r\\n    })\\r\\n    local hitObjects = {}\\r\\n    for i,v in pairs(hits) do\\r\\n        if v.hit_object ~= obj then table.insert(hitObjects,v.hit_object) end\\r\\n    end\\r\\n    return hitObjects\\r\\nend`